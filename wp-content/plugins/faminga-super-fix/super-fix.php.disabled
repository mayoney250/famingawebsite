<?php
/**
 * Plugin Name: Faminga Super Language Fix
 * Description: Comprehensive fix for language switcher using multiple techniques
 * Version: 1.0
 * Author: Faminga Team
 */

// Exit if accessed directly
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Disable any conflicting scripts
 */
function faminga_super_fix_dequeue_scripts() {
    // Remove any scripts that might be interfering
    wp_dequeue_script('faminga-theme-v1-language-switcher');
    wp_dequeue_script('faminga-theme-v1-language-switcher-fix');
    wp_dequeue_script('language-switcher-fix');
    wp_dequeue_script('faminga-language-switcher');
}
add_action('wp_print_scripts', 'faminga_super_fix_dequeue_scripts', 999);

/**
 * Add early fix via inline script in header
 */
function faminga_super_fix_early() {
    ?>
    <style>
    /* Ensure dropdown is visible when not hidden */
    #language-switcher-options:not(.hidden) {
        display: block !important;
        visibility: visible !important;
        opacity: 1 !important;
    }
    </style>
    <script>
    // Early intervention to override any existing onclick
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Super fix early stage running');
        
        function applyEarlyFix() {
            var button = document.getElementById('language-switcher-button');
            if (button) {
                // Override with direct attribute
                button.setAttribute('onclick', 
                    "event.preventDefault(); " +
                    "event.stopPropagation(); " +
                    "var dropdown = document.getElementById('language-switcher-options'); " +
                    "if (dropdown.classList.contains('hidden')) { " +
                    "    dropdown.classList.remove('hidden'); " +
                    "    dropdown.style.display = 'block'; " +
                    "} else { " +
                    "    dropdown.classList.add('hidden'); " +
                    "    dropdown.style.display = 'none'; " +
                    "} " +
                    "return false;"
                );
                
                console.log('Early fix applied');
            } else {
                // Try again in a moment
                setTimeout(applyEarlyFix, 50);
            }
        }
        
        // Start trying to apply the fix
        setTimeout(applyEarlyFix, 10);
    });
    </script>
    <?php
}
add_action('wp_head', 'faminga_super_fix_early', 999);

/**
 * Add main fix in footer
 */
function faminga_super_fix_main() {
    ?>
    <script>
    // Comprehensive fix applied after page load
    window.addEventListener('load', function() {
        console.log('Super fix main stage running');
        
        // Try multiple times to ensure we catch the elements
        function applyMainFix(attempts) {
            var button = document.getElementById('language-switcher-button');
            var dropdown = document.getElementById('language-switcher-options');
            
            if (!button || !dropdown) {
                if (attempts < 10) {
                    // Try again with exponential backoff
                    console.log('Elements not found, retrying... (attempt ' + attempts + ')');
                    setTimeout(function() {
                        applyMainFix(attempts + 1);
                    }, 100 * Math.pow(1.5, attempts));
                } else {
                    console.error('Could not find language switcher elements after multiple attempts');
                }
                return;
            }
            
            console.log('Found language switcher elements, applying comprehensive fix');
            
            // 1. Create completely new button
            var newButton = document.createElement('button');
            newButton.id = 'language-switcher-button';
            newButton.className = button.className;
            newButton.innerHTML = button.innerHTML;
            
            // 2. Set both attribute and property handlers
            newButton.setAttribute('onclick', 
                "event.preventDefault(); " +
                "event.stopPropagation(); " +
                "var dropdown = document.getElementById('language-switcher-options'); " +
                "if (dropdown.classList.contains('hidden')) { " +
                "    dropdown.classList.remove('hidden'); " +
                "    dropdown.style.display = 'block'; " +
                "} else { " +
                "    dropdown.classList.add('hidden'); " +
                "    dropdown.style.display = 'none'; " +
                "} " +
                "return false;"
            );
            
            // 3. Also set property handler as backup
            newButton.onclick = function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                if (dropdown.classList.contains('hidden')) {
                    dropdown.classList.remove('hidden');
                    dropdown.style.display = 'block';
                } else {
                    dropdown.classList.add('hidden');
                    dropdown.style.display = 'none';
                }
                
                return false;
            };
            
            // 4. Replace the original button
            button.parentNode.replaceChild(newButton, button);
            
            // 5. Make sure dropdown starts hidden
            dropdown.classList.add('hidden');
            dropdown.style.display = 'none';
            
            // 6. Add document click handler to close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (e.target !== newButton && !dropdown.contains(e.target)) {
                    dropdown.classList.add('hidden');
                    dropdown.style.display = 'none';
                }
            });
            
            // 7. Also handle dropdown links for language selection
            var links = dropdown.querySelectorAll('a');
            links.forEach(function(link) {
                link.addEventListener('click', function(e) {
                    // Set the URL and language via cookie
                    var href = this.getAttribute('href');
                    var urlObj = new URL(href, window.location.origin);
                    var lang = urlObj.searchParams.get('lang');
                    
                    if (lang) {
                        // Set cookie for 30 days
                        document.cookie = 'faminga_lang=' + lang + '; path=/; max-age=' + (60 * 60 * 24 * 30);
                    }
                });
            });
            
            console.log('Comprehensive fix applied successfully');
        }
        
        // Start with attempt 1
        setTimeout(function() {
            applyMainFix(1);
        }, 500);
    });
    </script>
    <?php
}
add_action('wp_footer', 'faminga_super_fix_main', 9999); 